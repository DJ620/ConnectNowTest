{"version":3,"sources":["components/Header/Header.tsx","Pages/Contact.tsx","components/Filter/Filter.tsx","components/GameInfo/GameInfo.tsx","utils/API.ts","Pages/VideoGames.tsx","App.tsx","index.tsx"],"names":["Header","history","useHistory","useState","video","setVideo","contact","setContact","className","onClick","push","Contact","styles","width","minWidth","margin","fontSize","label","marginBottom","input","backgroundColor","border","color","blue","button","height","style","type","rows","Filter","allGames","setFilteredGames","filteredGames","nameSearch","setNameSearch","minScore","setMinScore","sortBy","setSortBy","option1","setOption1","option2","setOption2","showOptions","setShowOptions","up","setUp","useEffect","search","filter","game","name","includes","rating","sortByScore","sortByName","sortByDate","games","sort","a","b","first_release_date","handleSort","placeholder","value","onChange","e","target","min","max","GameInfo","id","summary","window","innerWidth","setWidth","formattedDate","setFormattedDate","summaryPreview","setSummaryPreview","addEventListener","date","Date","day","getDate","month","getMonth","year","getFullYear","split","length","shortened","splice","join","toString","getGameData","axios","get","data","VideoGames","isLoading","setIsLoading","setAllGames","then","alphabeticalGames","map","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6016a7d1.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport \"./Header.css\";\n\nfunction Header() {\n  const history = useHistory();\n  const [video, setVideo] = useState(true);\n  const [contact, setContact] = useState(false);\n\n  // Functions to handle selection of Video Games or Contact\n  const handleVideo = () => {\n    setVideo(true);\n    setContact(false);\n    history.push(\"/\");\n  };\n\n  const handleContact = () => {\n    setContact(true);\n    setVideo(false);\n    history.push(\"/contact\");\n  };\n\n  return (\n    <div className=\"ml-3 mb-5\">\n      <div className=\"row mt-5 ml-2 ml-lg-0 montserrat white\">\n        <div className=\"col-12 col-lg-4 mb-3 mt-lg-5\">\n          <h3 className=\"label video\" onClick={handleVideo}>\n            VIDEO GAMES\n            {video ? <span className=\"echo videoEcho\">VIDEO</span> : null}\n          </h3>\n        </div>\n        <div className=\"col-12 col-lg-4 mt-lg-5 contactcol\">\n          <h3 className=\"label contact\" onClick={handleContact}>\n            CONTACT\n            {contact ? <span className=\"echo contactEcho\">CONTACT</span> : null}\n          </h3>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Header;\n","import React from \"react\";\n\nfunction Contact() {\n  const styles = {\n    contact: {\n      width: \"37%\",\n      minWidth: \"300px\",\n      margin: \"0 auto\",\n      fontSize: \"13px\"\n    },\n    label: {\n      marginBottom: \"5px\",\n    },\n    input: {\n      width: \"100%\",\n      backgroundColor: \"#182c47\",\n      border: \"none\",\n      color: \"#b6cae3\",\n    },\n    blue: {\n      color: \"#5692e8\"\n    },\n    button: {\n      color: \"#ffffff\",\n      backgroundColor: \"#5692e8\",\n      border: \"none\",\n      height: \"30px\",\n      width: \"65px\",\n    }\n  };\n  return (\n    <div style={styles.contact}>\n      <h4 className=\"montserrat\">GET IN TOUCH</h4>\n      <p className=\"mb-5\">\n        Trysail transom furl Sea legs scallywag Jack Ketch chandler mizzenmost\n        reef sails skysail. Shiver me timbers loot bucko belaying pin Sea Legs\n        boom gunwalls booty jury mast fore.\n      </p>\n      <div className=\"p-3\" style={{ backgroundColor: \"#0e1a2b\" }}>\n        <h6>Contact Form</h6>\n        <div className=\"row mt-4\">\n          <div className=\"col-12 col-lg-6\">\n            <p style={styles.label}>Name <span style={styles.blue}>*</span></p>\n            <input type=\"text\" className=\"mb-4\" style={styles.input} />\n          </div>\n          <div className=\"col-12 col-lg-6\">\n            <p style={styles.label}>Email Address <span style={styles.blue}>*</span></p>\n            <input type=\"text\" className=\"mb-4\" style={styles.input} />\n          </div>\n        </div>\n        <p style={styles.label}>Message <span style={styles.blue}>*</span></p>\n        <textarea style={styles.input} rows={4} />\n        <div className=\"d-flex justify-content-end\">\n          <button\n            className=\"mt-1\"\n            style={styles.button}\n          >\n            Send\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Contact;\n","import React, { SetStateAction, Dispatch, useState, useEffect } from \"react\";\nimport \"./Filter.css\";\nimport { GameData } from \"../../utils/API\";\n\ntype Props = {\n  allGames: GameData[];\n  filteredGames: GameData[];\n  setFilteredGames: Dispatch<SetStateAction<GameData[]>>;\n};\n\nconst Filter: React.FC<Props> = ({\n  allGames,\n  filteredGames,\n  setFilteredGames,\n}) => {\n  const [nameSearch, setNameSearch] = useState(\"\");\n  const [minScore, setMinScore] = useState(0);\n  const [sortBy, setSortBy] = useState(\"Release Date\");\n  const [option1, setOption1] = useState(\"Score\");\n  const [option2, setOption2] = useState(\"Name\");\n  const [showOptions, setShowOptions] = useState(false);\n  const [up, setUp] = useState(true);\n\n  // Function that handles filtering through the games\n  useEffect(() => {\n    let search = [...allGames];\n    if (nameSearch) {\n      search = search.filter((game: GameData) =>\n        game.name.includes(nameSearch)\n      );\n    }\n    if (minScore > 0) {\n      search = search.filter((game: GameData) => game.rating >= minScore * 10);\n    }\n    switch (sortBy) {\n      case \"Score\":\n        setFilteredGames(sortByScore(search));\n        break;\n      case \"Name\":\n        setFilteredGames(sortByName(search));\n        break;\n      default:\n        setFilteredGames(sortByDate(search));\n    }\n  }, [nameSearch, minScore, sortBy, up]);\n\n  // Function that handles ordering the games by release date\n  const sortByDate = (games: GameData[]) => {\n    return games.sort(\n      (a: GameData, b: GameData) => up ? a.first_release_date - b.first_release_date : b.first_release_date - a.first_release_date\n    );\n  };\n\n  //Function that handles ordering the games by score\n  const sortByScore = (games: GameData[]) => {\n    return games.sort((a: GameData, b: GameData) => up ? a.rating - b.rating : b.rating - a.rating);\n  };\n\n  // Function that handles ordering the game by name\n  const sortByName = (games: GameData[]) => {\n    return games.sort((a: GameData, b: GameData) => {\n      if (up ? a.name < b.name : b.name < a.name) {\n        return -1;\n      } else if (up ? a.name > b.name : b.name < a.name) {\n        return 1;\n      } else {\n        return 0;\n      }\n    });\n  };\n\n  // Function that determines how the games should be sorted/ordered\n  const handleSort = (sort: string) => {\n    if (option1 === sort) {\n      setOption1(sortBy);\n    } else {\n      setOption2(sortBy);\n    }\n    setSortBy(sort);\n    setShowOptions(false);\n  };\n\n  // Function that restores and resets the list of games to their initial order\n  const handleClear = () => {\n    setNameSearch(\"\");\n    setMinScore(0);\n    setUp(true);\n    if (sortBy !== \"Release Date\") {\n      if (option1 === \"Release Date\") {\n        setOption1(sortBy);\n      } else {\n        setOption2(sortBy);\n      };\n      setSortBy(\"Release Date\");\n    };\n    setShowOptions(false);\n  };\n\n  return (\n    <div className=\"px-3 background\">\n      <h5 className=\"white pt-4 pb-4\">Filter Results</h5>\n      <p className=\"white\">Name (contains)</p>\n      <input\n        type=\"text\"\n        placeholder=\"Text string\"\n        className=\"mb-4 input\"\n        value={nameSearch}\n        onChange={(e) => setNameSearch(e.target.value)}\n      />\n      <div className=\"row\">\n        <div className=\"col-12 col-sm-3 col-lg-12\">\n          <p className=\"white\">Minimum Score</p>\n          <input\n            type=\"number\"\n            placeholder=\"1 - 10\"\n            min=\"1\"\n            max=\"10\"\n            className=\"mb-4 pl-1 input\"\n            value={minScore > 0 ? minScore : \"1 - 10\"}\n            onChange={(e) => setMinScore(+e.target.value)}\n          />\n        </div>\n        <div className=\"col-12 col-sm-8 col-lg-12\">\n          <p className=\"white\">Order By</p>\n          <div className=\"row selectrow\">\n            <div className=\"col-1\">\n              <button className=\"arrow\" onClick={() => setUp(!up)}>\n                <span className={up ? \"fas fa-arrow-up\" : \"fas fa-arrow-down\"} />\n              </button>\n            </div>\n            <div className=\"col-10 col-xl-10\">\n              <div className=\"select\">\n                <p\n                  className=\"selected pt-1 pl-1\"\n                  onClick={() => setShowOptions(!showOptions)}\n                >\n                  {sortBy}\n                  <span className=\"fas fa-caret-down float-right pr-2 pt-1\" />\n                </p>\n                {showOptions ? (\n                  <div className=\"pl-1 options\">\n                    <p\n                      className=\"mb-2 pt-2 option\"\n                      onClick={() => handleSort(option1)}\n                    >\n                      {option1}\n                    </p>\n                    <p\n                      className=\"pb-lg-1 option\"\n                      onClick={() => handleSort(option2)}\n                    >\n                      {option2}\n                    </p>\n                  </div>\n                ) : null}\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-12 col-sm-1 col-lg-12\">\n          <div className=\"row d-flex justify-content-end\">\n            <button\n              className=\"mr-3 mt-lg-2 mb-lg-4 clear\"\n              onClick={handleClear}\n            >\n              Clear\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Filter;\n","import React, { useState, useEffect } from \"react\";\nimport { GameData } from \"../../utils/API\";\nimport \"./GameInfo.css\";\n\nconst GameInfo: React.FC<GameData> = ({\n  id,\n  first_release_date,\n  name,\n  rating,\n  summary,\n}) => {\n  const [width, setWidth] = useState(window.innerWidth);\n  const [formattedDate, setFormattedDate] = useState(\"\");\n  const [summaryPreview, setSummaryPreview] = useState(summary);\n\n  // Eventlistener used to check size of viewport and slice off the appropriate length of the summary\n  useEffect(() => {\n    window.addEventListener(\"resize\", () => {\n      setWidth(window.innerWidth);\n    });\n  }, [window.innerWidth]);\n\n  // Function to correctly format the release date of the game\n  useEffect(() => {\n    const date = new Date(first_release_date);\n    const day = date.getDate();\n    const month = date.getMonth() + 1;\n    const year = date.getFullYear();\n    setFormattedDate(`${day}/${month}/${year}`);\n  }, []);\n\n  // Function that shortens the displayed summary based on the width of the viewport\n  useEffect(() => {\n    if (width < 755) {\n      if (summary.split(\" \").length > 20) {\n        let shortened = summary.split(\" \");\n        shortened.splice(20);\n        setSummaryPreview(shortened.join(\" \") + \"...\");\n      }\n    } else if (width < 1099) {\n      if (summary.split(\" \").length > 40) {\n        let shortened = summary.split(\" \");\n        shortened.splice(40);\n        setSummaryPreview(shortened.join(\" \") + \"...\");\n      }\n    } else {\n      if (summary.split(\" \").length > 55) {\n        let shortened = summary.split(\" \");\n        shortened.splice(55);\n        setSummaryPreview(shortened.join(\" \") + \"...\");\n      }\n    }\n  }, [width]);\n\n  return (\n    <div>\n      <div className=\"row align-items-center mb-2 ml-lg-5 panel\">\n        <div className=\"col-2 black\"></div>\n        <div className=\"col-9 pb-4\">\n          <h5 className=\"white\">{name}</h5>\n          <p className=\"mt-n1\">Release Date: {formattedDate}</p>\n          <p>[Summary] {summaryPreview}</p>\n        </div>\n        <div className=\"col-1 mt-n4 pl-md-4 pl-lg-0 pl-xl-5\">\n          <p className=\"text-center pt-1 rating\">{rating.toString()[0]}</p>\n        </div>\n      </div>\n      {/* This section of code is for mobile-sized screens */}\n      <div className=\"smallPanel\">\n        <div className=\"smallBlack\">\n          <p className=\"text-center pt-1 smallRating\">{rating.toString()[0]}</p>\n        </div>\n        <div className=\"px-3 py-2 smallinfo align-items-center\">\n          <h5 className=\"white\">{name}</h5>\n          <p className=\"mt-n1\">Release Date: {formattedDate}</p>\n          <p>[Summary] {summaryPreview}</p>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default GameInfo;\n","import axios from \"axios\";\n\nexport type GameData = {\n    id: Number;\n    first_release_date: number;\n    name: string;\n    rating: number;\n    summary: String;\n    formattedDate?: Date;\n};\n\nexport const getGameData = async () => {\n    const allGames = await axios.get(\"https://public.connectnow.org.uk/applicant-test/\");\n    return allGames.data;\n};\n","import React, { useState, useEffect } from \"react\";\nimport Filter from \"../components/Filter/Filter\";\nimport GameInfo from \"../components/GameInfo/GameInfo\";\nimport { GameData, getGameData } from \"../utils/API\";\n\nfunction VideoGames() {\n  const [isLoading, setIsLoading] = useState(true);\n  const [allGames, setAllGames] = useState<GameData[]>([]);\n  const [filteredGames, setFilteredGames] = useState<GameData[]>([]);\n\n  // Queries the video game API and then sorts the games first alphabetically and then by release date\n  useEffect(() => {\n    getGameData().then((games) => {\n      setIsLoading(false);\n      let alphabeticalGames = games.sort((a: GameData, b: GameData) => {\n        if (a.name < b.name) {\n          return -1;\n        } else if (a.name > b.name) {\n          return 1;\n        } else {\n          return 0;\n        }\n      });\n      setAllGames(alphabeticalGames);\n      setFilteredGames(\n        [...alphabeticalGames].sort(\n          (a: GameData, b: GameData) =>\n            a.first_release_date - b.first_release_date\n        )\n      );\n    });\n  }, []);\n\n  return (\n    <div className=\"row\">\n      <div className=\"col-12 col-lg-2 mb-5\">\n        <Filter\n          allGames={allGames}\n          filteredGames={filteredGames}\n          setFilteredGames={setFilteredGames}\n        />\n      </div>\n      <div className=\"col-12 col-lg-10\">\n        {/* Until all game data has arrived from the API call, the user will simply see the word \"loading...\" */}\n        {isLoading ? (\n          <p className=\"ml-5\">Loading...</p>\n        ) : filteredGames.length > 0 ? (\n          filteredGames.map((game) => (\n            <GameInfo\n              key={game.name}\n              id={game.id}\n              first_release_date={game.first_release_date}\n              name={game.name}\n              rating={game.rating}\n              summary={game.summary}\n            />\n          ))\n        ) : (\n          // If the filter results come up empty, this message will be displayed to the user\n          <p className=\"ml-5\">No results matching your search</p>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default VideoGames;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\nimport Header from \"./components/Header/Header\";\nimport Contact from \"./Pages/Contact\";\nimport VideoGames from \"./Pages/VideoGames\";\n\nfunction App() {\n  return (\n    <div className=\"page\">\n      <Router>\n        <Header />\n        <Switch>\n          <Route exact path=\"/contact\" component={Contact} />\n          <Route component={VideoGames} />\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { HashRouter } from \"react-router-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter>\n      <App />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}